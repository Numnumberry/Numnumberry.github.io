{"version":3,"sources":["firebase/firebase.ts","definitions/Constants/Colors.ts","components/Resources/UtensilComponents/Button/Button.tsx","components/Resources/UtensilComponents/TextField/TextField.tsx","components/Resources/UtensilComponents/LabeledImage/LabeledImage.tsx","components/Resources/UtensilComponents/LoadingDisplay/LoadingDisplay.tsx","components/Resources/UtensilComponents/CheckBox/CheckBox.tsx","components/Framework/Header/Header.tsx","definitions/Constants/Sizes.ts","definitions/Constants/FirebaseFields.ts","api/Claim.ts","components/Pages/ClaimSubmit/ClaimSubmit.tsx","definitions/Constants/FirebaseCollections.ts","hooks/useTextInput.ts","api/User.ts","components/Pages/Credential/Credential.tsx","api/Credential.ts","components/Pages/AdminClaims/AdminClaims.tsx","components/Pages/AdminUsers/AdminUsers.tsx","components/Pages/Loading/Loading.tsx","components/Framework/ContentArea/ContentArea.tsx","components/Framework/SOSApp/SOSApp.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","fireAuth","auth","fireData","firestore","fireStorage","storage","Colors","Object","freeze","lightGray","gray","darkGray","darkerGray","darkestGray","white","offWhite","black","red","baseStyle","display","alignItems","justifyContent","cursor","color","fontWeight","outline","transition","boxSizing","primaryStyle","backgroundColor","border","borderRadius","secondaryStyle","tertiaryStyle","Button","props","buttonStyle","type","getStyle","onClick","style","children","textFieldStyle","padding","TextField","inputRef","useRef","useState","focused","setFocused","useEffect","focusOnMount","current","focus","ref","onKeyPress","event","key","blur","onEnterKey","value","onFocus","onBlur","maxLength","onChange","target","password","spellCheck","width","LabeledImage","labelValue","setLabelValue","marginBottom","flexDirection","imageWidth","height","imageHeight","alt","src","imageSource","newLabel","passLabel","textFieldWidth","LoadingDisplay","checkBoxStyle","CheckBox","checked","headerStyle","position","Header","loggedInUser","id","admin","setPage","page","marginLeft","signOut","setLoggedInUser","email","firstName","lastName","marginRight","futureUserFields","userFields","claimFields","downloadClaimFiles","claim","callback","fetchImageCalls","imageInfos","map","info","fetch","downloadUrl","fetchPdfCalls","pdfInfos","Promise","all","concat","then","responses","r","blob","blobs","fileNames","i","fileName","p","forEach","b","blobUrl","URL","createObjectURL","a","document","createElement","href","download","setTimeout","click","length","MAX_IMAGE_WIDTH","window","innerWidth","MAX_IMAGE_HEIGHT","innerHeight","statusContainerStyle","top","bottom","overflow","statusBackgroundStyle","zIndex","opacity","statusBoxStyle","margin","maxWidth","processingListItemStyle","paddingBottom","ClaimSubmit","blobsRef","labeledImages","setLabeledImages","labels","setLabels","pdfs","setPdfs","showModal","setShowModal","processing","setProcessing","errorMessage","setErrorMessage","removedImages","setRemovedImages","removedPdfs","setRemovedPdfs","generatedLabeledImagesCount","setGeneratedLabeledImagesCount","generatingLabeledImagesStatus","setGeneratingLabeledImagesStatus","uploadingFilesStatus","setUploadingFilesStatus","creatingUrlsStatus","setCreatingUrlsStatus","creatingDocStatus","setCreatingDocStatus","uploadedImagesCount","setUploadedImagesCount","uploadedPdfsCount","setUploadedPdfsCount","loadImage","imageFile","Image","onload","initialWidth","initialHeight","newWidth","newHeight","scaleFactor","scaleDimensions","naturalWidth","naturalHeight","scaledWidth","scaledHeight","imageElement","onAcquirePhoto","files","uploadingFilesCallback","success","message","creatingUrlsCallback","creatingDocCallback","resetProcessingState","resetPage","closeModal","submitClaim","canvas","ctx","getContext","generateLabeledImagesRecursively","l","includes","fontHeight","drawImage","fillStyle","fillRect","font","fillText","toBlob","push","user","imageFiles","uploadedImageCountCallback","uploadedPdfCountCallback","timestamp","Date","claimId","getTime","imageCount","pdfCount","imageNames","pdfNames","imageStoragePaths","pdfStoragePaths","imageUploadTasks","pdfUploadTasks","f","path","put","name","imageUploadTasksWithCallback","t","snapshot","pdfUploadTasksWithCallback","uploadTasks","getDownloadURL","urls","imageUrls","slice","pdfUrls","n","storagePath","collection","doc","set","catch","error","addClaim","filter","finishedImages","finishedPdfs","generateFileListItem","index","whiteSpace","textOverflow","removeItem","minWidth","fontSize","claimSubmitionSuccessful","keptFilesCount","Fragment","Math","min","MAX_MODAL_WIDTH","marginTop","flex","newLabels","setLabel","accept","htmlFor","capture","useTextInput","initialValue","setValue","newValue","fetchUserDocument","userId","get","documentSnapshot","userData","data","setUserDocument","containerStyle","centerBoxStyle","labelStyle","Credential","emailValue","bindEmailValue","passwordValue","bindPasswordValue","repeatPasswordValue","bindRepeatPasswordValue","loading","setLoading","registerMode","setRegisterMode","attemptRegister","newUser","futureUserData","exists","createUserWithEmailAndPassword","userCredential","uid","delete","attemptLogin","signInWithEmailAndPassword","AdminClaims","url","location","claimIdStartIndex","lastIndexOf","urlClaimId","claims","setClaims","fetchingClaims","setFetchingClaims","claimsToDelete","setClaimsToDelete","claimIdsProcessing","setClaimIdsProcessing","claimIdsDeleted","setClaimIdsDeleted","newClaim","claimData","ownerId","ownerFirstName","ownerLastName","console","log","orderBy","querySnapshot","q","fetchClaims","newClaims","c","storageDeletionCalls","databaseDeletionCalls","deleteClaims","undefined","date","toDate","hour","getHours","minutes","getMinutes","stringMinutes","toString","ampm","getMonth","getDate","getFullYear","formatDate","AdminUsers","users","setUsers","fetchingUsers","setFetchingUsers","userIdsToDelete","setUserIdsToDelete","userIdsDeleted","setUserIdsDeleted","userIdsProcessing","setUserIdsProcessing","showAddUserModal","setShowAddUserModal","firstNameValue","bindFirstNameValue","lastNameValue","bindLastNameValue","newUserAdmin","setNewUserAdmin","addingFutureUser","setAddingFutureUser","nameStyle","futureUser","addFutureUser","userIds","deleteUserDocuments","u","makeAdmin","newUsers","findIndex","toggleAdminRole","spinnerContainerStyle","Loading","contentAreaStyle","paddingTop","ContentArea","getPage","SOSApp","lockAutoLogin","autoLoginAttemptDone","setAutoLoginAttemptDone","onAuthStateChanged","fetchedUser","newPage","App","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","getElementById","process","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.679fb326.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\nimport 'firebase/storage';\n\nfirebase.initializeApp({\n  apiKey: \"AIzaSyBu4CnVOrfk7iUR-FuE43G5SOtGuWBIKNM\",\n  authDomain: \"sosdev-8dd29.firebaseapp.com\",\n  databaseURL: \"https://sosdev-8dd29.firebaseio.com\",\n  projectId: \"sosdev-8dd29\",\n  storageBucket: \"sosdev-8dd29.appspot.com\",\n  messagingSenderId: \"304920388330\",\n  appId: \"1:304920388330:web:c57e9329a3ac1a2d62ed93\",\n  measurementId: \"G-6Y9H3ZEFEE\"\n});\n\nexport const fireAuth = firebase.auth();\nexport const fireData = firebase.firestore();\nexport const fireStorage = firebase.storage();","export const Colors = Object.freeze({\n  lightGray: '#4D4B4F',\n  gray: '#252426',\n  darkGray: '#1e1e1e',\n  darkerGray: '#151515',\n  darkestGray: '#0f0f0f',\n  white: 'white',\n  offWhite: '#8c8c8c',\n  black: 'black',\n  red: '#e32b2b'\n});","import React from 'react';\nimport { Colors } from '../../../../definitions/Constants/Colors';\n\ntype ButtonType = 'primary' | 'secondary' | 'tertiary';\n\ninterface IProps {\n  type: ButtonType;\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n  onClick?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;\n}\n\nconst baseStyle: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  cursor: 'pointer',\n  color: Colors.white,\n  fontWeight: 500,\n  outline: 'none',\n  transition: 'all .1s ease-in',\n  boxSizing: 'border-box'\n}\n\nconst primaryStyle: React.CSSProperties = {\n  ...baseStyle,\n  backgroundColor: Colors.lightGray,\n  border: '1px solid ' + Colors.darkerGray,\n  borderRadius: '2px'\n}\n\nconst secondaryStyle: React.CSSProperties = {\n  ...baseStyle,\n  backgroundColor: Colors.gray,\n  border: '1px solid ' + Colors.darkerGray,\n  borderRadius: '2px'\n}\n\nconst tertiaryStyle: React.CSSProperties = {\n  ...baseStyle,\n  backgroundColor: Colors.red,\n  border: '1px solid ' + Colors.darkerGray,\n  borderRadius: '2px'\n}\n\nconst getStyle = (type: ButtonType): React.CSSProperties => {\n  switch (type) {\n    case 'primary':\n      return primaryStyle;\n    case 'secondary':\n      return secondaryStyle;\n    case 'tertiary':\n      return tertiaryStyle;\n    default:\n      return primaryStyle;\n  }\n}\n\nconst Button = (props: IProps) => {\n  const buttonStyle: React.CSSProperties = getStyle(props.type);\n\n  return (\n    <div onClick={props.onClick} style={{ ...buttonStyle, ...props.style }}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Button;\n\n\n","import React, { useState, useEffect, useRef } from 'react';\nimport { Colors } from '../../../../definitions/Constants/Colors';\n\ninterface IProps {\n  value: string;\n  width: string;\n  onChange: (newText: string) => void;\n  maxLength: number;\n  password?: boolean;\n  onEnterKey?: () => void;\n  focusOnMount?: boolean;\n}\n\nconst textFieldStyle: React.CSSProperties = {\n  padding: '8px',\n  color: Colors.white,\n  backgroundColor: Colors.darkGray,\n  borderRadius: '2px',\n  outline: 'none'\n}\n\nconst TextField: React.FC<IProps> = (props) => {\n  const inputRef = useRef<HTMLInputElement>(null);\n  const [focused, setFocused] = useState(false);\n\n  useEffect(() => {\n    if (props.focusOnMount && inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, [props.focusOnMount])\n\n  const onKeyPress = (event: React.KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Enter') {\n      if (inputRef.current) {\n        inputRef.current.blur();\n      }\n      if (props.onEnterKey) {\n        props.onEnterKey();\n      }\n    }\n  }\n\n  return (\n    <input\n      ref={inputRef}\n      onKeyPress={onKeyPress}\n      value={props.value}\n      onFocus={() => setFocused(true)}\n      onBlur={() => setFocused(false)}\n      maxLength={props.maxLength}\n      onChange={(event) => props.onChange(event.target.value)}\n      type={props.password ? 'password' : 'text'}\n      spellCheck={false}\n      style={{\n        ...textFieldStyle,\n        width: props.width,\n        border: `1px solid ${focused ? Colors.offWhite : Colors.lightGray}`\n      }}\n    />\n  );\n}\n\nexport default TextField;","import React, { useState } from 'react';\nimport { TextField } from '../../UtensilComponents';\nimport { Colors } from '../../../../definitions/Constants/Colors';\n\ninterface IProps {\n  imageSource: string;\n  imageWidth: string | undefined;\n  imageHeight: string | undefined;\n  textFieldWidth: string;\n  passLabel: (newLabel: string) => void;\n}\n\nconst LabeledImage: React.FC<IProps> = (props) => {\n  const [labelValue, setLabelValue] = useState('');\n\n  const onChangeLabel = (newLabel: string) => {\n    setLabelValue(newLabel);\n    props.passLabel(newLabel);\n  }\n\n  return (\n    <div style={{ display: 'flex', justifyContent: 'center', marginBottom: '16px', backgroundColor: Colors.darkestGray }}>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <img\n          width={props.imageWidth}\n          height={props.imageHeight}\n          alt={'uploaded'}\n          src={props.imageSource}\n        />\n        <TextField\n          focusOnMount\n          value={labelValue}\n          onChange={onChangeLabel}\n          width={props.textFieldWidth}\n          maxLength={50}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default LabeledImage;","import React from 'react';\nimport Loader from 'react-loader-spinner';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\ninterface IProps {\n  type: 'Oval' | 'ThreeDots',\n  color: string,\n  width: number,\n  height: number\n}\n\nconst LoadingDisplay: React.FC<IProps> = (props) => {\n  return (\n    <div style={{ marginBottom: '-4px' }}>\n      <Loader type={props.type} color={props.color} width={props.width} height={props.height} />\n    </div>\n  );\n}\n\nexport default LoadingDisplay;","import React from 'react';\nimport { Colors } from '../../../../definitions/Constants/Colors';\n\ninterface IProps {\n  checked: boolean;\n}\n\nconst checkBoxStyle: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  width: '18px',\n  height: '18px',\n  backgroundColor: Colors.white,\n  borderRadius: '2px',\n  cursor: 'pointer'\n}\n\nconst CheckBox: React.FC<IProps> = (props) => {\n  return (\n    <div style={checkBoxStyle}>\n      {\n        props.checked ? (\n          <div style={{ width: '14px', height: '14px', backgroundColor: Colors.red }} />\n        ) : null\n      }\n    </div>\n  );\n}\n\nexport default CheckBox;","import React from 'react';\nimport { Colors } from '../../../definitions/Constants/Colors';\nimport { HEADER_HEIGHT } from '../../../definitions/Constants/Sizes';\nimport { UserType, PageType } from '../../../definitions/Types';\nimport { fireAuth } from '../../../firebase/firebase';\nimport { Button } from '../../Resources/UtensilComponents';\n\ninterface IProps {\n  page: PageType;\n  setPage: (newPage: PageType) => void;\n  loggedInUser: UserType;\n  setLoggedInUser: (user: UserType) => void;\n}\n\nconst headerStyle: React.CSSProperties = {\n  color: 'white',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  position: 'fixed',\n  backgroundColor: Colors.darkGray,\n  height: `${HEADER_HEIGHT}px`,\n  width: '100%'\n};\n\nconst Header: React.FC<IProps> = (props) => {\n  const logout = () => {\n    fireAuth.signOut();\n    props.setLoggedInUser({\n      id: '',\n      admin: false,\n      email: '',\n      firstName: '',\n      lastName: ''\n    });\n  }\n\n  return (\n    <div style={headerStyle}>\n      {\n        props.loggedInUser.id !== '' && props.loggedInUser.admin ? (\n          <div style={{ display: 'flex' }}>\n            <Button onClick={() => props.setPage('admin-claims')} type={props.page === 'admin-claims' ? 'secondary' : 'primary'} style={{ width: '72px', height: '32px', marginLeft: '16px' }}>\n              <span>Claims</span>\n            </Button>\n            <Button onClick={() => props.setPage('admin-users')} type={props.page === 'admin-users' ? 'secondary' : 'primary'} style={{ width: '66px', height: '32px', marginLeft: '8px' }}>\n              <span>Users</span>\n            </Button>\n            <Button onClick={() => props.setPage('claim-submit')} type={props.page === 'claim-submit' ? 'secondary' : 'primary'} style={{ width: '70px', height: '32px', marginLeft: '8px' }}>\n              <span>Submit</span>\n            </Button>        \n          </div>\n        ) : <div style={{ height: '32px' }} />\n      }\n      {\n        props.loggedInUser.id !== '' ? (\n          <Button onClick={logout} type={'tertiary'} style={{ width: '70px', height: '32px', marginRight: '16px' }}>\n            <span>Logout</span>\n          </Button>\n        ) : null \n      }\n    </div>\n  )\n}\n\nexport default Header;","export const HEADER_HEIGHT = 50;","export const futureUserFields = {\n  admin: 'admin',\n  firstName: 'firstName',\n  lastName: 'lastName'\n}\n\nexport const userFields = {\n  email: 'email',\n  firstName: 'firstName',\n  lastName: 'lastName',\n  admin: 'admin'\n}\n\nexport const claimFields = {\n  ownerId: 'ownerId',\n  ownerFirstName: 'ownerFirstName',\n  ownerLastName: 'ownerLastName',\n  imageInfos: 'imageInfos',\n  pdfInfos: 'pdfInfos',\n  timestamp: 'timestamp'\n}","import { fireStorage, fireData } from '../firebase/firebase';\nimport { ClaimType, UserType, FileInfoType } from '../definitions/Types';\nimport { claimFields } from '../definitions/Constants/FirebaseFields';\nimport { CLAIMS } from '../definitions/Constants/FirebaseCollections';\n\nexport const addClaim = (\n  user: UserType,\n  imageFiles: Blob[],\n  labels: string[],\n  pdfs: File[],\n  uploadedImageCountCallback: (finishedImages: number) => void,\n  uploadedPdfCountCallback: (finishedPdfs: number) => void,\n  uploadingFilesCallback: (success: boolean, message: string) => void,\n  creatingUrlsCallback: (success: boolean, message: string) => void,\n  creatingDocCallback: (success: boolean, message: string) => void\n) => {\n  const timestamp = new Date();\n  const claimId = `${user.id}_${timestamp.getTime()}`;\n  let imageCount = 0;\n  let pdfCount = 0;\n\n  const imageNames: string[] = [];\n  const pdfNames: string[] = [];\n  const imageStoragePaths: string[] = [];\n  const pdfStoragePaths: string[] = [];\n  const imageUploadTasks: firebase.storage.UploadTask[] = [];\n  const pdfUploadTasks: firebase.storage.UploadTask[] = [];\n\n  imageFiles.forEach((f, i) => {\n    const path = `users/${user.id}/claims/${claimId}/${i + 1}_${labels[i]}.jpeg`;\n    imageNames.push(`${i + 1}_${labels[i]}.jpeg`);\n    imageStoragePaths.push(path);\n    imageUploadTasks.push(fireStorage.ref(path).put(f));\n  });\n  pdfs.forEach((p, i) => {\n    const path = `users/${user.id}/claims/${claimId}/${imageFiles.length + i + 1}_${p.name}`;\n    pdfNames.push(`${imageFiles.length + i + 1}_${p.name}`);\n    pdfStoragePaths.push(path);\n    pdfUploadTasks.push(fireStorage.ref(path).put(p));\n  });\n\n  const imageUploadTasksWithCallback: Promise<firebase.storage.UploadTaskSnapshot>[] = imageUploadTasks.map(t => t.then(() => {\n    uploadedImageCountCallback(++imageCount);\n    return t.snapshot;\n  }));\n  const pdfUploadTasksWithCallback: Promise<firebase.storage.UploadTaskSnapshot>[] = pdfUploadTasks.map(t => t.then(() => {\n    uploadedPdfCountCallback(++pdfCount);\n    return t.snapshot;\n  }));\n\n  //add all images and documents to storage\n  Promise.all(imageUploadTasksWithCallback.concat(pdfUploadTasksWithCallback)).then(uploadTasks => {\n    uploadingFilesCallback(true, '');\n    //get download URLs for each file\n    Promise.all(uploadTasks.map(t => t.ref.getDownloadURL())).then(urls => {\n      creatingUrlsCallback(true, '');\n\n      const imageUrls = urls.slice(0, imageFiles.length);\n      const pdfUrls = urls.slice(imageFiles.length);\n      const imageInfos: FileInfoType[] = [];\n      const pdfInfos: FileInfoType[] = [];\n\n      imageNames.forEach((n, i) => {\n        imageInfos.push({\n          fileName: n,\n          downloadUrl: imageUrls[i],\n          storagePath: imageStoragePaths[i]\n        });\n      });\n\n      pdfNames.forEach((n, i) => {\n        pdfInfos.push({\n          fileName: n,\n          downloadUrl: pdfUrls[i],\n          storagePath: pdfStoragePaths[i]\n        });\n      });\n\n      //create claim document\n      fireData.collection(CLAIMS).doc(claimId).set({\n        [claimFields.ownerId]: user.id,\n        [claimFields.ownerFirstName]: user.firstName,\n        [claimFields.ownerLastName]: user.lastName,\n        [claimFields.imageInfos]: imageInfos,\n        [claimFields.pdfInfos]: pdfInfos,\n        [claimFields.timestamp]: timestamp\n      }).then(() => {\n        creatingDocCallback(true, '');\n      }).catch(error => {\n        creatingDocCallback(false, error.message);\n      })\n    }).catch(error => {\n      creatingUrlsCallback(false, error.message);\n    })\n  }).catch(error => {\n    uploadingFilesCallback(false, error.message);\n  })\n}\n\nexport const fetchClaims = (callback: (claims: ClaimType[]) => void) => {\n  fireData.collection(CLAIMS).orderBy(claimFields.timestamp, 'desc').get().then(querySnapshot => {\n    const claims: ClaimType[] = [];\n    \n    querySnapshot.forEach(q => {\n      const claimData = q.data();\n      claims.push({\n        id: q.id,\n        ownerId: claimData[claimFields.ownerId],\n        ownerFirstName: claimData[claimFields.ownerFirstName],\n        ownerLastName: claimData[claimFields.ownerLastName],\n        imageInfos: claimData[claimFields.imageInfos],\n        pdfInfos: claimData[claimFields.pdfInfos],\n        timestamp: claimData[claimFields.timestamp]\n      });\n    });\n\n    callback(claims);\n  }).catch(error => {\n    console.log(error);\n    callback([]);\n  })\n}\n\nexport const fetchClaim = (claimId: string, callback: (claim: ClaimType | null) => void) => {\n  fireData.collection(CLAIMS).doc(claimId).get().then(documentSnapshot => {\n    const claimData = documentSnapshot.data();\n\n    if (documentSnapshot.exists && claimData) {\n      callback({\n        id: documentSnapshot.id,\n        ownerId: claimData[claimFields.ownerId],\n        ownerFirstName: claimData[claimFields.ownerFirstName],\n        ownerLastName: claimData[claimFields.ownerLastName],\n        imageInfos: claimData[claimFields.imageInfos],\n        pdfInfos: claimData[claimFields.pdfInfos],\n        timestamp: claimData[claimFields.timestamp]\n      });\n    } else {\n      callback(null);\n    }\n  }).catch(error => {\n    console.log(error);\n    callback(null);\n  })\n}\n\nexport const downloadClaimFiles = (claim: ClaimType, callback: () => void) => {\n  const DOWNLOAD_INTERVAL = 400;\n  const fetchImageCalls = claim.imageInfos.map(info => fetch(info.downloadUrl));\n  const fetchPdfCalls = claim.pdfInfos.map(info => fetch(info.downloadUrl));\n\n  Promise.all(fetchImageCalls.concat(fetchPdfCalls)).then(responses => {\n    Promise.all(responses.map(r => r.blob())).then(blobs => {\n      const fileNames = claim.imageInfos.map(i => i.fileName).concat(claim.pdfInfos.map(p => p.fileName));\n      \n      blobs.forEach((b, i) => {\n        const blobUrl = URL.createObjectURL(b);\n        const a = document.createElement('a');\n        a.href = blobUrl;\n        a.download = fileNames[i];\n        setTimeout(() => {\n          a.click();\n\n          if (blobs.length === i + 1) {\n            callback();\n          }\n        }, i * DOWNLOAD_INTERVAL);\n      })\n    })\n  })\n}\n\nexport const deleteClaims = (claims: ClaimType[], callback: () => void) => {\n  const storageDeletionCalls: Promise<any>[] = [];\n  const databaseDeletionCalls: Promise<void>[] = [];\n\n  claims.forEach(c => {\n    databaseDeletionCalls.push(fireData.collection(CLAIMS).doc(c.id).delete());\n    c.imageInfos.forEach(i => {\n      storageDeletionCalls.push(fireStorage.ref(i.storagePath).delete());\n    });\n    c.pdfInfos.forEach(p => {\n      storageDeletionCalls.push(fireStorage.ref(p.storagePath).delete());\n    });\n  });\n\n  Promise.all(storageDeletionCalls.concat(databaseDeletionCalls)).then(() => {\n    callback();\n  })\n}","import React, { useState, useRef } from 'react';\nimport { Colors } from '../../../definitions/Constants/Colors';\nimport { Button, LabeledImage, LoadingDisplay } from '../../Resources/UtensilComponents';\nimport { addClaim } from '../../../api/Claim';\nimport { UserType } from '../../../definitions/Types';\n\ninterface IProps {\n  loggedInUser: UserType;\n}\n\ninterface LabeledImageType {\n  id: number;\n  imageElement: HTMLImageElement;\n  textFieldWidth: string;\n}\n\ntype ProcessingStatusType = 'Processing' | 'Done' | 'Failed' | '';\n\nconst MAX_IMAGE_WIDTH = window.innerWidth - 32;\nconst MAX_IMAGE_HEIGHT = window.innerHeight / 2;\nconst MAX_MODAL_WIDTH = 500;\n\nconst statusContainerStyle: React.CSSProperties = {\n  display: 'flex',\n  position: 'fixed',\n  top: '0px',\n  bottom: '0px',\n  width: '100%',\n  height: '100%',\n  overflow: 'scroll'\n}\n\nconst statusBackgroundStyle: React.CSSProperties = {\n  zIndex: 0,\n  opacity: 0.9,\n  backgroundColor: Colors.darkestGray,\n  position: 'fixed',\n  width: '100%',\n  height: '100%',\n}\n\nconst statusBoxStyle: React.CSSProperties = {\n  zIndex: 1,\n  backgroundColor: Colors.gray,\n  margin: 'auto',\n  width: MAX_IMAGE_WIDTH,\n  maxWidth: '500px'\n}\n\nconst processingListItemStyle: React.CSSProperties = {\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  color: Colors.white,\n  paddingBottom: '8px'\n}\n\nconst ClaimSubmit: React.FC<IProps> = (props) => {\n  const blobsRef = useRef<Blob[]>([]);\n  const [labeledImages, setLabeledImages] = useState<LabeledImageType[]>([]);\n  const [labels, setLabels] = useState<string[]>([]);\n  const [pdfs, setPdfs] = useState<File[]>([]);\n  const [showModal, setShowModal] = useState(false);\n  const [processing, setProcessing] = useState(false);\n  const [errorMessage, setErrorMessage] = useState('');\n  const [removedImages, setRemovedImages] = useState<number[]>([]);\n  const [removedPdfs, setRemovedPdfs] = useState<number[]>([]);\n\n  const [generatedLabeledImagesCount, setGeneratedLabeledImagesCount] = useState(0);\n  const [generatingLabeledImagesStatus, setGeneratingLabeledImagesStatus] = useState<ProcessingStatusType>('');\n  const [uploadingFilesStatus, setUploadingFilesStatus] = useState<ProcessingStatusType>('');\n  const [creatingUrlsStatus, setCreatingUrlsStatus] = useState<ProcessingStatusType>('');\n  const [creatingDocStatus, setCreatingDocStatus] = useState<ProcessingStatusType>('');\n  const [uploadedImagesCount, setUploadedImagesCount] = useState(0);\n  const [uploadedPdfsCount, setUploadedPdfsCount] = useState(0);\n\n  const setLabel = (index: number, newLabel: string) => {\n    const newLabels = [...labels];\n    newLabels[index] = newLabel;\n    setLabels(newLabels);\n  }\n\n  const scaleDimensions = (initialWidth: number, initialHeight: number) => {\n    let newWidth = initialWidth;\n    let newHeight = initialHeight;\n\n    if (newWidth > MAX_IMAGE_WIDTH) {\n      const scaleFactor = MAX_IMAGE_WIDTH / newWidth;\n      newWidth = newWidth * scaleFactor;\n      newHeight = newHeight * scaleFactor;\n    }\n\n    if (newHeight > MAX_IMAGE_HEIGHT) {\n      const scaleFactor = MAX_IMAGE_HEIGHT / newHeight;\n      newWidth = newWidth * scaleFactor;\n      newHeight = newHeight * scaleFactor;\n    }\n\n    return [newWidth, newHeight];\n  }\n\n  const loadImage = (imageFile: File) => {\n    const i = new Image();\n\n    i.onload = () => {\n      const [scaledWidth, scaledHeight] = scaleDimensions(i.naturalWidth, i.naturalHeight);\n\n      i.width = scaledWidth;\n      i.height = scaledHeight;\n\n      setLabels([...labels, '']);\n      setLabeledImages([\n        ...labeledImages, {\n          id: labeledImages.length,\n          imageElement: i,\n          textFieldWidth: `${MAX_IMAGE_WIDTH - 18}px`\n        }\n      ]);\n    }\n    \n    i.src = URL.createObjectURL(imageFile);\n  }\n\n  const onAcquirePhoto = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length) {\n      loadImage(event.target.files[0]);\n    }\n  }\n\n  const onAcquirePdf = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files.length) {\n      setPdfs([ ...pdfs, event.target.files[0] ]);\n    }\n  }\n\n  const generateLabeledImagesRecursively = (\n    l: LabeledImageType,\n    i: number,\n    canvas: HTMLCanvasElement,\n    ctx: CanvasRenderingContext2D,\n    callback: () => void\n  ) => {\n    //if we have the number of blobs we expected to have, then callback and get out of here\n    if (blobsRef.current.length === (labeledImages.length - removedImages.length)) {\n      callback();\n    } else {\n      //if this index is marked for removal, then do not bother generating an image, move to the next one\n      if (removedImages.includes(i)) {\n        generateLabeledImagesRecursively(labeledImages[i + 1], i + 1, canvas, ctx, callback);\n      } else {\n        const width = l.imageElement.naturalWidth;\n        const height = l.imageElement.naturalHeight;\n        const fontHeight = l.imageElement.naturalWidth * 0.08;\n        \n        canvas.width = width;\n        canvas.height = height + fontHeight;\n        \n        ctx.drawImage(l.imageElement, 0, 0, width, height);\n        ctx.fillStyle = Colors.white;\n        ctx.fillRect(0, height, width, fontHeight);\n        ctx.font = `${fontHeight}px Arial`;\n        ctx.fillStyle = Colors.black;\n        ctx.fillText(labels[i], 0, height + fontHeight - (fontHeight * .22), width);\n  \n        canvas.toBlob(blob => {\n          if (blob) {\n            blobsRef.current.push(blob);\n            setGeneratedLabeledImagesCount(blobsRef.current.length);\n            generateLabeledImagesRecursively(labeledImages[i + 1], i + 1, canvas, ctx, callback);\n          } else {\n            setGeneratingLabeledImagesStatus('Failed');\n            setErrorMessage('Blob creation failed.');\n            setProcessing(false);\n          }\n        }, 'image/jpeg', .6)\n      }\n    }\n  }\n\n  const uploadingFilesCallback = (success: boolean, message: string) => {\n    if (success) {\n      setUploadingFilesStatus('Done');\n      setCreatingUrlsStatus('Processing');\n    } else {\n      setUploadingFilesStatus('Failed');\n      setErrorMessage(message);\n      setProcessing(false);\n    }\n  }\n\n  const creatingUrlsCallback = (success: boolean, message: string) => {\n    if (success) {\n      setCreatingUrlsStatus('Done');\n      setCreatingDocStatus('Processing');\n    } else {\n      setCreatingUrlsStatus('Failed');\n      setErrorMessage(message);\n      setProcessing(false);\n    }\n  }\n\n  const creatingDocCallback = (success: boolean, message: string) => {\n    if (success) {\n      setCreatingDocStatus('Done');\n      setProcessing(false);\n    } else {\n      setCreatingDocStatus('Failed');\n      setErrorMessage(message);\n      setProcessing(false);\n    }\n  }\n\n  const resetProcessingState = () => {\n    blobsRef.current = [];\n    setErrorMessage('');\n    setGeneratedLabeledImagesCount(0);\n    setGeneratingLabeledImagesStatus('');\n    setUploadingFilesStatus('');\n    setCreatingUrlsStatus('');\n    setCreatingDocStatus('');\n    setUploadedImagesCount(0);\n    setUploadedPdfsCount(0);\n  }\n  \n  const resetPage = () => {\n    resetProcessingState();\n    setLabeledImages([]);\n    setLabels([]);\n    setPdfs([]);\n    setShowModal(false);\n    setRemovedImages([]);\n    setRemovedPdfs([]);\n  }\n  \n  const closeModal = () => {\n    setRemovedImages([]);\n    setRemovedPdfs([]);\n    setErrorMessage('');\n    setShowModal(false);\n  }\n\n  const submitClaim = () => {\n    resetProcessingState();\n    setGeneratingLabeledImagesStatus('Processing');\n    setProcessing(true);\n\n    const canvas = document.createElement('canvas');\n    const ctx = canvas.getContext('2d');\n\n    if (ctx) {\n      generateLabeledImagesRecursively(labeledImages[0], 0, canvas, ctx, () => {\n        setGeneratingLabeledImagesStatus('Done');\n        setUploadingFilesStatus('Processing');\n        addClaim(\n          props.loggedInUser,\n          blobsRef.current,\n          labels.filter((l, i) => !removedImages.includes(i)),\n          pdfs.filter((p, i) => !removedPdfs.includes(i)),\n          (finishedImages) => setUploadedImagesCount(finishedImages),\n          (finishedPdfs) => setUploadedPdfsCount(finishedPdfs),\n          uploadingFilesCallback,\n          creatingUrlsCallback,\n          creatingDocCallback\n        );\n      });\n    } else {\n      setGeneratingLabeledImagesStatus('Failed');\n      setErrorMessage('Canvas context failed.');\n      setProcessing(false);\n    }\n  }\n    \n  const removeItem = (type: 'image' | 'pdf', index: number) => {\n    if (type === 'image') {\n      setRemovedImages([ ...removedImages, index ]);\n    } else {\n      setRemovedPdfs([ ...removedPdfs, index ]);\n    }\n  }\n  \n  const generateFileListItem = (type: 'image' | 'pdf', name: string, index: number) => {\n    return (\n      <div style={processingListItemStyle}>\n        <div style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>{type === 'image' ? `${index + 1}_${name}.jpeg` : name}</div>\n        <Button onClick={() => removeItem(type, index)} type={'tertiary'} style={{ width: '32px', minWidth: '32px', height: '32px' }}>\n          <span style={{ fontSize: '22px' }}>X</span>\n        </Button>\n      </div>\n    );\n  }\n\n  const claimSubmitionSuccessful = generatingLabeledImagesStatus === 'Done' && uploadingFilesStatus === 'Done' && creatingUrlsStatus === 'Done' && creatingDocStatus === 'Done';\n  const keptFilesCount = (labeledImages.length + pdfs.length) - (removedImages.length + removedPdfs.length);\n\n  const generateModal = () => {\n    return (\n      <div style={statusContainerStyle}>\n        <div style={statusBackgroundStyle} />\n        <div style={statusBoxStyle}>\n          <div style={{ margin: '16px' }}>\n            <div style={{\n              backgroundColor: Colors.darkGray,\n              width: `${Math.min(MAX_IMAGE_WIDTH - 48, MAX_MODAL_WIDTH - 48)}px`,\n              padding: '8px 8px 0 8px'\n            }}>\n              {\n                processing || claimSubmitionSuccessful || errorMessage ? (\n                  <React.Fragment>\n                    <div style={processingListItemStyle}>\n                      <div>{`Generating Images ${generatedLabeledImagesCount}/${labeledImages.length - removedImages.length}`}</div>\n                      <div>{generatingLabeledImagesStatus}</div>\n                    </div>\n                    <div style={processingListItemStyle}>\n                      <div>{`Uploading Files ${uploadedImagesCount + uploadedPdfsCount}/${keptFilesCount}`}</div>\n                      <div>{uploadingFilesStatus}</div>\n                    </div>\n                    <div style={processingListItemStyle}>\n                      <div>{'Creating URLs'}</div>\n                      <div>{creatingUrlsStatus}</div>\n                    </div>\n                    <div style={processingListItemStyle}>\n                      <div>{'Creating Document'}</div>\n                      <div>{creatingDocStatus}</div>\n                    </div>\n                  </React.Fragment>\n                ) : (\n                  <React.Fragment>\n                    {labels.map((l, i) => removedImages.includes(i) ? null : <React.Fragment key={i}>{generateFileListItem('image', l, i)}</React.Fragment>)}\n                    {pdfs.map((p, i) => removedPdfs.includes(i) ? null : <React.Fragment key={i}>{generateFileListItem('pdf', p.name, i)}</React.Fragment>)}\n                  </React.Fragment>\n                )\n              }\n            </div>\n            {\n              errorMessage ? (\n                <div style={{ marginTop: '16px' }}><span style={{ color: Colors.red }}>{errorMessage}</span></div>\n              ) : null\n            }\n            <div style={{ display: 'flex', justifyContent: 'center', height: '48px', marginTop: '16px' }}>\n              {\n                processing ? (\n                  <LoadingDisplay type={'ThreeDots'} color={Colors.lightGray} width={200} height={48} />\n                ) : (\n                  <React.Fragment>\n                    {\n                      claimSubmitionSuccessful ? (\n                        <Button onClick={resetPage} type={'tertiary'} style={{ flex: 1, height: '100%' }}>\n                          <span>FINISH</span>\n                        </Button>\n                      ) : (\n                        <Button onClick={closeModal} type={'primary'} style={{ flex: 1, height: '100%' }}>\n                          <span>Cancel</span>\n                        </Button>\n                      )\n                    }\n                    {\n                      claimSubmitionSuccessful || (removedImages.length === labeledImages.length && removedPdfs.length === pdfs.length) ? null : (\n                        <React.Fragment>\n                          <div style={{ width: '16px', height: '100%' }} />\n                          <Button onClick={submitClaim} type={'tertiary'} style={{ flex: 1, height: '100%' }}>\n                            <span>{errorMessage ? 'RETRY' : 'SUBMIT CLAIM'}</span>\n                          </Button>\n                        </React.Fragment>\n                      )\n                    }\n                  </React.Fragment>\n                )\n              }\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      {\n        showModal ? <React.Fragment>{generateModal()}</React.Fragment> : null\n      }\n      <div style={{ margin: '16px' }}>\n        {\n          labeledImages.map(l => (\n            <LabeledImage\n              key={l.id}\n              imageSource={l.imageElement.src}\n              imageWidth={`${l.imageElement.width}px`}\n              imageHeight={`${l.imageElement.height}px`}\n              textFieldWidth={l.textFieldWidth}\n              passLabel={(newLabel) => setLabel(l.id, newLabel)}\n            />\n          ))\n        }\n        <div style={{ display: 'flex', height: '64px', margin: '16px 0' }}>\n          <input type={'file'} accept={'image/jpeg'} id={'choosePhoto'} onChange={onAcquirePhoto} style={{ display: 'none' }} />\n          <label htmlFor={'choosePhoto'} style={{ color: Colors.white, flex: 1 }}>\n            <Button type={'secondary'} style={{ height: '100%' }}><span>Choose Photo</span></Button>\n          </label>\n          <div style={{ width: '16px', height: '100%' }} />\n          <input type={'file'} accept={'image/*'} capture={'environment'} id={'takePhoto'} onChange={onAcquirePhoto} style={{ display: 'none' }} />\n          <label htmlFor={'takePhoto'} style={{ color: Colors.white, flex: 1 }}>\n            <Button type={'primary'} style={{ height: '100%' }}><span>Take Photo</span></Button>\n          </label>\n        </div>\n        {\n          pdfs.map((p, i) => (\n            <div key={i} style={{ color: Colors.red, display: 'flex', justifyContent: 'center', marginBottom: '8px', width: MAX_IMAGE_WIDTH }}>\n              <span style={{ whiteSpace: 'nowrap', textOverflow: 'ellipsis', overflow: 'hidden' }}>{p.name}</span>\n            </div>\n          ))\n        }\n        <div style={{ height: '64px', margin: '16px 0' }}>\n          <input type={'file'} accept={'application/pdf'} id={'choosePdf'} onChange={onAcquirePdf} style={{ display: 'none' }} />\n          <label htmlFor={'choosePdf'} style={{ color: Colors.white }}>\n            <Button type={'primary'} style={{ height: '100%' }}><span>Choose PDF</span></Button>\n          </label>\n        </div>\n        {\n          labels.length === 0 && pdfs.length === 0 ? null : (\n            <Button onClick={() => setShowModal(true)} type={'tertiary'} style={{ height: '64px' }}><span>SUBMIT CLAIM</span></Button>\n          )\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default ClaimSubmit;","export const FUTURE_USERS = 'future_users';\nexport const USERS = 'users';\nexport const CLAIMS = 'claims';","import { useState } from 'react';\n\ninterface Bind {\n  value: string;\n  onChange: (newValue: string) => void;\n}\n\nconst useTextInput = (initialValue: string): [string, Bind, () => void] => {\n  const [value, setValue] = useState(initialValue);\n  \n  const reset = () => {\n    setValue(initialValue);\n  }\n\n  const bind = {\n    value: value,\n    onChange: (newValue: string) => {\n      setValue(newValue)\n    }\n  }\n\n  return [value, bind, reset];\n}\n\nexport default useTextInput;","import { fireData } from '../firebase/firebase';\nimport { UserType, FutureUserType } from \"../definitions/Types\";\nimport { USERS, FUTURE_USERS } from '../definitions/Constants/FirebaseCollections';\nimport { userFields, futureUserFields } from '../definitions/Constants/FirebaseFields';\n\nexport const addFutureUser = (futureUser: FutureUserType, callback: () => void) => {\n  fireData.collection(FUTURE_USERS).doc(futureUser.email).set({\n    [futureUserFields.admin]: futureUser.admin,\n    [futureUserFields.firstName]: futureUser.firstName,\n    [futureUserFields.lastName]: futureUser.lastName\n  }).then(() => {\n    callback();\n  })\n}\n\nexport const fetchUserDocument = (userId: string, callback: (user: UserType | null) => void) => {\n  fireData.collection(USERS).doc(userId).get().then(documentSnapshot => {\n    const userData = documentSnapshot.data();\n    \n    if (userData) {\n      callback({\n        id: userId,\n        email: userData[userFields.email],\n        firstName: userData[userFields.firstName],\n        lastName: userData[userFields.lastName],\n        admin: userData[userFields.admin]\n      });\n    } else {\n      callback(null);\n    }\n  }).catch(() => {\n    callback(null);\n  })\n}\n\nexport const fetchUserDocuments = (callback: (users: UserType[]) => void) => {\n  fireData.collection(USERS).orderBy(userFields.lastName, 'asc').get().then(querySnapshot => {\n    const users: UserType[] = [];\n\n    querySnapshot.forEach(q => {\n      const userData = q.data();\n      users.push({\n        id: q.id,\n        email: userData[userFields.email],\n        firstName: userData[userFields.firstName],\n        lastName: userData[userFields.lastName],\n        admin: userData[userFields.admin]\n      });\n    });\n    \n    callback(users);\n  }).catch(() => {\n    callback([]);\n  })\n}\n\nexport const setUserDocument = (user: UserType, callback: (success: boolean) => void) => {\n  fireData.collection(USERS).doc(user.id).set({\n    [userFields.email]: user.email,\n    [userFields.firstName]: user.firstName,\n    [userFields.lastName]: user.lastName,\n    [userFields.admin]: user.admin\n  }).then(() => {\n    callback(true);\n  }).catch(() => {\n    callback(false);\n  })\n}\n\nexport const deleteUserDocuments = (userIds: string[], callback: () => void) => {\n  const databaseDeletionCalls: Promise<void>[] = [];\n\n  userIds.forEach(uid => {\n    databaseDeletionCalls.push(fireData.collection(USERS).doc(uid).delete());\n  });\n\n  Promise.all(databaseDeletionCalls).then(() => {\n    callback();\n  })\n}","import React, { useState } from 'react';\nimport { Colors } from '../../../definitions/Constants/Colors';\nimport { useTextInput } from '../../../hooks';\nimport { TextField, Button, LoadingDisplay } from '../../Resources/UtensilComponents';\nimport { registerUser, loginUser } from '../../../api/Credential';\nimport { UserType } from '../../../definitions/Types';\n\ninterface IProps {\n  setLoggedInUser: (user: UserType) => void;\n}\n\nconst TEXT_FIELD_WIDTH = '270px';\n\nconst containerStyle: React.CSSProperties = {\n  backgroundColor: Colors.darkerGray,\n  display: 'flex',\n  position: 'absolute',\n  top: '50px',\n  bottom: '0px',\n  width: '100%',\n  height: 'auto'\n}\n\nconst centerBoxStyle: React.CSSProperties = {\n  backgroundColor: Colors.gray,\n  margin: 'auto' \n}\n\nconst labelStyle: React.CSSProperties = {\n  color: Colors.white,\n  marginBottom: '8px'\n}\n\nconst Credential: React.FC<IProps> = (props) => {\n  const [emailValue, bindEmailValue] = useTextInput('');\n  const [passwordValue, bindPasswordValue] = useTextInput('');\n  const [repeatPasswordValue, bindRepeatPasswordValue] = useTextInput('');\n  const [errorMessage, setErrorMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [registerMode, setRegisterMode] = useState(false);\n\n  const attemptRegister = () => {\n    setErrorMessage('');\n    if (passwordValue === repeatPasswordValue) {\n      setLoading(true);\n      registerUser(emailValue, passwordValue, (success, message, newUser) => {\n        if (success && newUser) {\n          props.setLoggedInUser(newUser);\n        } else {\n          setLoading(false);\n          setErrorMessage(message);\n        }\n      })\n    } else {\n      setErrorMessage('Passwords do not match.');\n    }\n  }\n\n  const attemptLogin = () => {\n    setErrorMessage('');\n    setLoading(true);\n    loginUser(emailValue, passwordValue, (success, message, user) => {\n      if (success && user) {\n        props.setLoggedInUser(user);\n      } else {\n        setLoading(false);\n        setErrorMessage(message);\n      }\n    })\n  }\n\n  const toggleMode = () => {\n    setRegisterMode(!registerMode);\n  }\n\n  return (\n    <div style={containerStyle}>\n      <div style={centerBoxStyle}>\n        <div style={{ margin: '16px' }}>\n          <div style={{ marginBottom: '16px' }}>\n            <div style={labelStyle}><span>Email:</span></div>\n            <TextField\n              {...bindEmailValue}\n              focusOnMount\n              width={TEXT_FIELD_WIDTH}\n              maxLength={50}\n              onEnterKey={registerMode ? attemptRegister : attemptLogin}\n            />\n          </div>\n          <div style={{ marginBottom: '16px' }}>\n            <div style={labelStyle}><span>Password:</span></div>\n            <TextField\n              {...bindPasswordValue}\n              width={TEXT_FIELD_WIDTH}\n              maxLength={50}\n              onEnterKey={registerMode ? attemptRegister : attemptLogin}\n              password\n            />\n          </div>\n          {\n            registerMode ? (\n              <div style={{ marginBottom: '16px' }}>\n                <div style={labelStyle}><span>Repeat Password:</span></div>\n                <TextField\n                  {...bindRepeatPasswordValue}\n                  width={TEXT_FIELD_WIDTH}\n                  maxLength={50}\n                  onEnterKey={registerMode ? attemptRegister : attemptLogin}\n                  password\n                />\n              </div>\n            ) : null\n          }\n          <div style={{ display: 'flex', justifyContent: 'center' }}>\n            {\n              loading ? (\n                <LoadingDisplay type='ThreeDots' color={Colors.lightGray} width={100} height={32} />\n              ) : (\n                <div style={{ display: 'flex' }}>\n                  <Button onClick={toggleMode} type={'secondary'} style={{ width: '172px', height: '48px', marginRight: '16px' }}>\n                    {registerMode ? <span>Switch to Login</span> : <span>Switch to Register</span>}\n                  </Button>\n                  <Button onClick={registerMode ? attemptRegister : attemptLogin} type={'primary'} style={{ width: '100px', height: '48px' }}>\n                    {registerMode ? <span>REGISTER</span> : <span>LOG IN</span>}\n                  </Button>\n                </div>\n              )\n            }\n          </div>\n          {\n            errorMessage ? (\n              <div style={{ color: Colors.red, marginTop: '16px', width: TEXT_FIELD_WIDTH }}><span>{errorMessage}</span></div>\n            ) : null\n          }\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Credential;","import { fireAuth, fireData } from '../firebase/firebase';\nimport { UserType } from '../definitions/Types';\nimport { FUTURE_USERS } from '../definitions/Constants/FirebaseCollections';\nimport { futureUserFields } from '../definitions/Constants/FirebaseFields';\nimport { fetchUserDocument, setUserDocument } from './User';\n\nexport const registerUser = (\n  email: string,\n  password: string,\n  callback: (success: boolean, message: string, newUser?: UserType) => void\n) => {\n  //see if the email is allowed to register\n  fireData.collection(FUTURE_USERS).doc(email).get().then(documentSnapshot => {\n    const futureUserData = documentSnapshot.data();\n\n    //if allowed then create user\n    if (documentSnapshot.exists && futureUserData) {\n      fireAuth.createUserWithEmailAndPassword(email, password).then(userCredential => {\n        //if user object is not null (dont know why it would be) then create user document\n        if (userCredential.user) {\n          const newUser: UserType = {\n            id: userCredential.user.uid,\n            email: email,\n            firstName: futureUserData[futureUserFields.firstName],\n            lastName: futureUserData[futureUserFields.lastName],\n            admin: futureUserData[futureUserFields.admin]\n          }\n\n          setUserDocument(newUser, (success) => {\n            if (success) {\n              fireData.collection(FUTURE_USERS).doc(email).delete();\n              callback(true, '', newUser);\n            } else {\n              callback(false, 'Failed to create user document.')\n            }\n          })\n        }\n      }).catch(error => {\n        callback(false, error.message);\n      })\n    } else {\n      callback(false, 'This email is not allowed to register.');\n    }\n  }).catch(error => {\n    callback(false, error.message);\n  })\n}\n\nexport const loginUser = (\n  email: string,\n  password: string,\n  callback: (success: boolean, message: string, user?: UserType) => void\n) => {\n  fireAuth.signInWithEmailAndPassword(email, password).then(userCredential => {\n    //if user object is not null (dont know why it would be) then fetch user document\n    if (userCredential.user) {\n      fetchUserDocument(userCredential.user.uid, (user) => {\n        if (user) {\n          callback(true, '', user);\n        } else {\n          callback(false, 'User document does not exist.')\n        }\n      });\n    }\n  }).catch(error => {\n    callback(false, error.message);\n  })\n}","import React, { useState, useEffect } from 'react';\nimport { Colors } from '../../../definitions/Constants/Colors';\nimport { Button, LoadingDisplay } from '../../Resources/UtensilComponents';\nimport { ClaimType, TimestampType } from '../../../definitions/Types';\nimport { fetchClaims, fetchClaim, downloadClaimFiles, deleteClaims } from '../../../api/Claim';\nimport { LoadingPage } from '../../Pages';\n\ninterface IProps {}\n\nconst containerStyle: React.CSSProperties = {\n  color: 'white',\n  display: 'flex',\n  justifyContent: 'center'\n}\n\nconst MAX_LIST_ITEM_WIDTH = 658;\n\nconst AdminClaims: React.FC<IProps> = (props) => {\n  const url = window.location.href;\n  const claimIdStartIndex = url.lastIndexOf('=');\n  const urlClaimId = claimIdStartIndex === -1 ? '' : url.slice(claimIdStartIndex + 1);\n\n  const [claims, setClaims] = useState<ClaimType[]>([]);\n  const [fetchingClaims, setFetchingClaims] = useState(true);\n  const [claimsToDelete, setClaimsToDelete] = useState<ClaimType[]>([]);\n  const [claimIdsProcessing, setClaimIdsProcessing] = useState<string[]>([]);\n  const [claimIdsDeleted, setClaimIdsDeleted] = useState<string[]>([]);\n\n  useEffect(() => {\n    if (urlClaimId) {\n      fetchClaim(urlClaimId, (newClaim) => {\n        if (newClaim) {\n          setClaims([newClaim]);\n          setClaimIdsProcessing([newClaim.id]);\n          downloadClaimFiles(newClaim, () => setClaimIdsProcessing([]));\n        }\n        setFetchingClaims(false);\n      });\n    } else {\n      fetchClaims((newClaims: ClaimType[]) => {\n        setClaims(newClaims);\n        setFetchingClaims(false);\n      });\n    }\n  }, [urlClaimId])\n\n  const formatDate = (timestamp: TimestampType) => {\n    const date = timestamp.toDate();\n\n    let hour = date.getHours();\n    let minutes = date.getMinutes();\n    let stringMinutes = minutes.toString();\n    let ampm = 'AM';\n    \n    if (hour === 0) {\n      hour = 12;\n    }\n\n    if (hour > 12) {\n      hour = hour - 12;\n      ampm = 'PM';\n    }\n\n    if (minutes < 10) {\n      stringMinutes = '0' + minutes;\n    }\n\n    return `${date.getMonth() + 1}/${date.getDate()}/${date.getFullYear()} ${hour}:${stringMinutes} ${ampm}`;\n  }\n\n  const toggleMarkToDelete = (claim: ClaimType) => {\n    if (claimsToDelete.map(c => c.id).includes(claim.id)) {\n      setClaimsToDelete(claimsToDelete.filter(c => c.id !== claim.id));\n    } else {\n      setClaimsToDelete([ ...claimsToDelete, claim ]);\n    }\n  }\n\n  const startDownloadingClaimFiles = (claim: ClaimType) => {\n    setClaimIdsProcessing([claim.id]);\n    downloadClaimFiles(claim, () => setClaimIdsProcessing([]));\n  }\n\n  const startClaimDeletions = () => {\n    setClaimIdsProcessing(claimsToDelete.map(c => c.id));\n    deleteClaims(claimsToDelete, () => {\n      setClaimIdsDeleted(claimIdsDeleted.concat(claimsToDelete.map(c => c.id)));\n      setClaimsToDelete([]);\n      setClaimIdsProcessing([]);\n    });\n  }\n  \n  if (fetchingClaims) {\n    return (\n      <LoadingPage />\n    );\n  }\n\n  if (!claims.length || claimIdsDeleted.length === claims.length) {\n    return (\n      <div style={containerStyle}>\n        <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginTop: '16px' }}>\n          <div>{'NO RESULTS'}</div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div style={containerStyle}>\n      <div>\n        {\n          claimsToDelete.length && !claimIdsProcessing.length ? (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: '16px', backgroundColor: Colors.gray, padding: '9px' }}>\n              <div style={{ marginLeft: '7px' }}>{`Delete these ${claimsToDelete.length} claim(s)?`}</div>\n              <Button onClick={startClaimDeletions} type={'tertiary'} style={{ width: '90px', minWidth: '90px', height: '32px', marginRight: '7px' }}>\n                <span>CONFIRM</span>\n              </Button>\n            </div>\n          ) : null\n        }\n        {\n          claims.filter(c => !claimIdsDeleted.includes(c.id)).map(c => (\n            <div key={c.id} style={{ display: 'flex', alignItems: 'center', marginTop: '16px' }}>\n              <div\n                onClick={claimIdsProcessing.length ? () => null : () => startDownloadingClaimFiles(c)}\n                style={{\n                  cursor: claimIdsProcessing.length ? undefined : 'pointer',\n                  display: 'flex',\n                  padding: '16px',\n                  backgroundColor: claimsToDelete.map(claim => claim.id).includes(c.id) ? Colors.red : Colors.gray\n                }}\n              >\n                <div style={{ width: '160px', marginRight: '16px' }}>{formatDate(c.timestamp)}</div>\n                <div style={{\n                  width: window.innerWidth < MAX_LIST_ITEM_WIDTH ? '72px' : '180px',\n                  marginRight: window.innerWidth < MAX_LIST_ITEM_WIDTH ? undefined : '16px',\n                  whiteSpace: 'nowrap',\n                  textOverflow: 'ellipsis',\n                  overflow: 'hidden'\n                }}>\n                  {`${c.ownerLastName}, ${c.ownerFirstName}`}\n                </div>\n                {\n                  window.innerWidth < MAX_LIST_ITEM_WIDTH ? null : (\n                    <React.Fragment>\n                      <div style={{ width: '84px', marginRight: '16px' }}>{`${c.imageInfos.length} images`}</div>\n                      <div style={{ width: '114px' }}>{`${c.pdfInfos.length} documents`}</div>\n                    </React.Fragment>\n                  )\n                }\n              </div>\n              {\n                claimIdsProcessing.includes(c.id) ? (\n                  <div style={{ marginLeft: '8px' }}>\n                    <LoadingDisplay type={'Oval'} color={Colors.lightGray} width={32} height={32} />\n                  </div>\n                ) : (\n                  <Button onClick={() => toggleMarkToDelete(c)} type={'tertiary'} style={{ width: '32px', minWidth: '32px', height: '32px', marginLeft: '8px' }}>\n                    <span style={{ fontSize: '22px' }}>X</span>\n                  </Button>\n                )\n              }\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default AdminClaims;","import React, { useState, useEffect } from 'react';\nimport { Colors } from '../../../definitions/Constants/Colors';\nimport { UserType } from '../../../definitions/Types';\nimport { Button, CheckBox, LoadingDisplay, TextField } from '../../Resources/UtensilComponents';\nimport { LoadingPage } from '../../Pages';\nimport { useTextInput } from '../../../hooks';\nimport { fetchUserDocuments, setUserDocument, deleteUserDocuments, addFutureUser } from '../../../api/User';\n\ninterface IProps {\n  loggedInUser: UserType;\n}\n\nconst containerStyle: React.CSSProperties = {\n  color: 'white',\n  display: 'flex',\n  justifyContent: 'center'\n}\n\nconst MAX_LIST_ITEM_WIDTH = 418;\nconst TEXT_FIELD_WIDTH = '270px';\n\nconst labelStyle: React.CSSProperties = {\n  color: Colors.white,\n  marginBottom: '8px'\n}\n\nconst AdminUsers: React.FC<IProps> = (props) => {\n  const [users, setUsers] = useState<UserType[]>([]);\n  const [fetchingUsers, setFetchingUsers] = useState(true);\n  const [userIdsToDelete, setUserIdsToDelete] = useState<string[]>([]);\n  const [userIdsDeleted, setUserIdsDeleted] = useState<string[]>([]);\n  const [userIdsProcessing, setUserIdsProcessing] = useState<string[]>([]);\n  const [showAddUserModal, setShowAddUserModal] = useState(false);\n  const [emailValue, bindEmailValue] = useTextInput('');\n  const [firstNameValue, bindFirstNameValue] = useTextInput('');\n  const [lastNameValue, bindLastNameValue] = useTextInput('');\n  const [newUserAdmin, setNewUserAdmin] = useState(false);\n  const [addingFutureUser, setAddingFutureUser] = useState(false);\n\n  useEffect(() => {\n    fetchUserDocuments((users) => {\n      setUsers(users);\n      setFetchingUsers(false);\n    });\n  }, [])\n\n  const toggleMarkToDelete = (userId: string) => {\n    if (userIdsToDelete.includes(userId)) {\n      setUserIdsToDelete(userIdsToDelete.filter(id => id !== userId));\n    } else {\n      setUserIdsToDelete([ ...userIdsToDelete, userId ]);\n    }\n  }\n\n  const startUserDeletions = () => {\n    setUserIdsProcessing([...userIdsToDelete]);\n    deleteUserDocuments(userIdsToDelete, () => {\n      setUserIdsDeleted(userIdsDeleted.concat(userIdsToDelete));\n      setUserIdsToDelete([]);\n      setUserIdsProcessing([]);\n    });\n  }\n\n  const toggleAdminRole = (user: UserType, makeAdmin: boolean) => {\n    //an admin cannot edit themselves, this makes it to where there is always at least 1 admin\n    if (props.loggedInUser.id !== user.id) {\n      const newUsers = [...users];\n      const index = newUsers.findIndex(u => u.id === user.id);\n      newUsers[index].admin = makeAdmin;\n    \n      setUsers(newUsers);\n      setUserDocument(newUsers[index], (success) => {\n        if (!success) {\n          newUsers[index].admin = !makeAdmin;\n          setUsers([...newUsers]);\n        }\n      });\n    }\n  }\n\n  const nameStyle: React.CSSProperties = {\n    width: window.innerWidth < MAX_LIST_ITEM_WIDTH ? '70px' : '120px',\n    marginRight: '16px',\n    whiteSpace: 'nowrap',\n    textOverflow: 'ellipsis',\n    overflow: 'hidden'\n  }\n\n  if (fetchingUsers) {\n    return (\n      <LoadingPage />\n    );\n  }\n\n  const startAddingFutureUser = () => {\n    setAddingFutureUser(true);\n    addFutureUser({\n      email: emailValue,\n      admin: newUserAdmin,\n      firstName: firstNameValue,\n      lastName: lastNameValue\n    }, () => {\n      setAddingFutureUser(false);\n      setShowAddUserModal(false);\n    })\n  }\n\n  return (\n    <div style={containerStyle}>\n      <div>\n        <div style={{ display: 'flex', justifyContent: 'center', width: '100%', backgroundColor: Colors.gray, marginTop: '16px' }}>\n          {\n            showAddUserModal ? (\n              <div style={{ padding: '16px' }}>\n                <div style={{ marginBottom: '16px' }}>\n                  <div style={labelStyle}><span>Email:</span></div>\n                  <TextField\n                    {...bindEmailValue}\n                    width={TEXT_FIELD_WIDTH}\n                    maxLength={50}\n                  />\n                </div>\n                <div style={{ marginBottom: '16px' }}>\n                  <div style={labelStyle}><span>First Name:</span></div>\n                  <TextField\n                    {...bindFirstNameValue}\n                    width={TEXT_FIELD_WIDTH}\n                    maxLength={50}\n                  />\n                </div>\n                <div style={{ marginBottom: '16px' }}>\n                  <div style={labelStyle}><span>Last Name:</span></div>\n                  <TextField\n                    {...bindLastNameValue}\n                    width={TEXT_FIELD_WIDTH}\n                    maxLength={50}\n                  />\n                </div>\n                <div style={{ display: 'flex', alignItems: 'center', marginBottom: '16px' }}>\n                  <div onClick={() => setNewUserAdmin(!newUserAdmin)}>\n                    <CheckBox checked={newUserAdmin} />\n                  </div>\n                  <div style={{ marginLeft: '8px' }}><span>Allow Admin Access</span></div>\n                </div>\n                <div style={{ display: 'flex', justifyContent: 'center' }}>\n                  {\n                    addingFutureUser ? (\n                      <LoadingDisplay type={'ThreeDots'} color={Colors.lightGray} width={200} height={48} />\n                    ) : (\n                      <Button onClick={startAddingFutureUser} type={'tertiary'} style={{ width: '170px', height: '48px' }}>\n                        <span>Add User To System</span>\n                      </Button>\n                    )\n                  }\n                </div>\n              </div>\n            ) : (\n              <Button onClick={() => setShowAddUserModal(true)} type={'primary'} style={{ padding: '16px', width: '100%' }}>\n                <span>Add New User</span>\n              </Button>\n            )\n          }\n        </div>\n        {\n          userIdsToDelete.length ? (\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'space-between', marginTop: '16px', backgroundColor: Colors.gray, padding: '9px' }}>\n              <div style={{ marginLeft: '7px' }}>{`Delete these ${userIdsToDelete.length} user(s)?`}</div>\n              <Button onClick={startUserDeletions} type={'tertiary'} style={{ width: '90px', minWidth: '90px', height: '32px', marginRight: '7px' }}>\n                <span>CONFIRM</span>\n              </Button>\n            </div>\n          ) : null\n        }\n        {\n          users.filter(u => !userIdsDeleted.includes(u.id)).map(u => (\n            <div key={u.id} style={{ display: 'flex', alignItems: 'center', marginTop: '16px' }}>\n              <div\n                style={{\n                  display: 'flex',\n                  padding: '16px',\n                  backgroundColor: userIdsToDelete.includes(u.id) ? Colors.red : Colors.gray\n                }}\n              >\n                <div style={nameStyle}>{u.lastName}</div>\n                <div style={nameStyle}>{u.firstName}</div>\n                <div style={{ display: 'flex', alignItems: 'center' }}>\n                  <div onClick={() => toggleAdminRole(u, !u.admin)}>\n                    <CheckBox checked={u.admin} />\n                  </div>\n                  <div style={{ marginLeft: '8px' }}>{'Admin'}</div>\n                </div>\n              </div>\n              {\n                userIdsProcessing.includes(u.id) ? (\n                  <div style={{ marginLeft: '8px' }}>\n                    <LoadingDisplay type={'Oval'} color={Colors.lightGray} width={32} height={32} />\n                  </div>\n                ) : (\n                  <Button\n                    onClick={props.loggedInUser.id === u.id ? () => null : () => toggleMarkToDelete(u.id)}\n                    type={'tertiary'}\n                    style={{\n                      width: '32px',\n                      minWidth: '32px',\n                      height: '32px',\n                      marginLeft: '8px'\n                    }}\n                  >\n                    <span style={{ fontSize: '22px' }}>X</span>\n                  </Button>\n                )\n              }\n            </div>\n          ))\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default AdminUsers;","import React from 'react';\nimport { Colors } from '../../../definitions/Constants/Colors';\nimport { LoadingDisplay } from '../../Resources/UtensilComponents';\n\nconst spinnerContainerStyle: React.CSSProperties = {\n  backgroundColor: Colors.darkerGray,\n  display: 'flex',\n  position: 'absolute',\n  top: '50px',\n  bottom: '0px',\n  width: '100%',\n  height: 'auto'\n}\n\nconst Loading = () => {\n  return (\n    <div style={spinnerContainerStyle}>\n      <div style={{ margin: 'auto' }}>\n        <LoadingDisplay type={'Oval'} color={Colors.gray} width={300} height={300} />\n      </div>\n    </div>\n  );\n}\n\nexport default Loading;","import React from 'react';\nimport { Colors } from '../../../definitions/Constants/Colors';\nimport { HEADER_HEIGHT } from '../../../definitions/Constants/Sizes';\nimport { CredentialPage, ClaimSubmitPage, AdminClaimsPage, AdminUsersPage, LoadingPage } from '../../Pages';\nimport { UserType, PageType } from '../../../definitions/Types';\n\ninterface IProps {\n  page: PageType;\n  loggedInUser: UserType;\n  setLoggedInUser: (user: UserType) => void;\n}\n\nconst contentAreaStyle: React.CSSProperties = {\n  paddingTop: `${HEADER_HEIGHT}px`,\n  backgroundColor: Colors.darkerGray\n}\n\nconst ContentArea: React.FC<IProps> = (props) => {\n  const getPage = () => {\n    switch (props.page) {\n      case 'credential': return <CredentialPage setLoggedInUser={props.setLoggedInUser} />\n      case 'claim-submit': return <ClaimSubmitPage loggedInUser={props.loggedInUser} />\n      case 'admin-claims': return <AdminClaimsPage />\n      case 'admin-users': return <AdminUsersPage loggedInUser={props.loggedInUser} />\n      case 'loading': return <LoadingPage />\n    }\n  }\n\n  return (\n    <div style={contentAreaStyle}>\n      {getPage()}\n    </div>\n  )\n}\n\nexport default ContentArea;","import React, { useState, useEffect, useRef } from 'react';\nimport { fireAuth } from '../../../firebase/firebase';\nimport Header from '../Header/Header';\nimport ContentArea from '../ContentArea/ContentArea';\nimport { UserType, PageType } from '../../../definitions/Types';\nimport { fetchUserDocument } from '../../../api/User';\n\ninterface IProps {}\n\nconst SOSApp: React.FC<IProps> = () => {\n  const lockAutoLogin = useRef(false);\n  const [autoLoginAttemptDone, setAutoLoginAttemptDone] = useState(false);\n  const [page, setPage] = useState<PageType>('loading');\n  const [loggedInUser, setLoggedInUser] = useState<UserType>({\n    id: '',\n    admin: false,\n    email: '',\n    firstName: '',\n    lastName: ''\n  });\n\n  useEffect(() => {\n    fireAuth.onAuthStateChanged(user => {\n      if (!lockAutoLogin.current) {\n        lockAutoLogin.current = true;\n\n        if (user) {\n          console.log('auto fetching user doc')\n          fetchUserDocument(user.uid, (fetchedUser) => {\n            if (fetchedUser) {\n              setLoggedInUser(fetchedUser);\n            }\n            setAutoLoginAttemptDone(true);\n          });\n        } else {\n          console.log('no signed in user')\n          setAutoLoginAttemptDone(true);\n        }\n      }\n    });\n  }, []);\n  \n  useEffect(() => {\n    if (autoLoginAttemptDone) {\n      if (loggedInUser.id === '') {\n        setPage('credential');\n      } else {\n        if (loggedInUser.admin) {\n          setPage('admin-claims');\n        } else {\n          setPage('claim-submit');\n        }\n      }\n    }\n  }, [autoLoginAttemptDone, loggedInUser])\n\n  return (\n    <React.Fragment>\n      <Header\n        page={page}\n        setPage={(newPage: PageType) => setPage(newPage)}\n        loggedInUser={loggedInUser}\n        setLoggedInUser={(user: UserType) => setLoggedInUser(user)}\n      />\n      <ContentArea\n        page={page}\n        loggedInUser={loggedInUser}\n        setLoggedInUser={(user: UserType) => setLoggedInUser(user)}\n      />\n    </React.Fragment>\n  );\n}\n\nexport default SOSApp;","import React from 'react';\nimport SOSApp from './components/Framework/SOSApp/SOSApp';\nimport './definitions/Styles/normalize.css';\n\nfunction App() {\n  return (\n    <SOSApp />\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}